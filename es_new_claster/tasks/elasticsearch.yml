---
#all task for elastic

#----------------PING_ES_SERVERS-----------------
- name: ping servers
  ping:

#----------------INCLUDE_ES_VARS-----------------
- name: include vars
  include_vars:
    file: defaults/elastic.yml

#-----------CHECK_DIRECTORY_TASK-----------------  
- name: check SCRIPTS directory
  stat:
    path: "{{ es_scripts }}"
  register: scripts_elastic

- name:	check APP directory
  stat:
    path: "{{ es_app }}" 
  register: app_elastic

- name:	check LOGS directory
  stat:
    path: "{{ es_logs }}"
  register: logs_elastic      

#-----------MAKE_DIRECTORY_TAKS------------------

- name: Creates directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  loop:
    - { path: "{{ es_scripts }}", owner: 'admin', group: 'root' }
    - { path: "{{ es_curator }}", owner: 'admin', group: 'root' }
    - { path: "{{ es_app }}", owner: 'admin', group: 'root' }
    - { path: "{{ es_logs }}", owner: 'admin', group: 'root' }
    - { path: "{{ es_curator_logs }}", owner: 'admin', group: 'root' }
  when: "update == false and scripts_elastic.stat.exists == false and 'elasticsearch_hosts' in group_names"

#---------------COPY_ES_CONFIGS------------------

- name: copy es configs to nodes
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  loop:
    - { src: "{{ src_es_conf }}", dest: "{{  dst_es_conf }}", owner: 'admin', group: 'admin' }
    - {	src: "{{ src_es_dc }}", dest: "{{  dst_es_dc }}", owner: 'admin', group: 'admin' }
  when: "'elasticsearch_hosts' in group_names and update == false"

#===============CHANGE_ES_CONFIGS==================

#---------------DOCKER_COMPOSE---------------------
- name: change container_name
  lineinfile:
   destfile: "{{ item.destfile }}"
   regexp: "{{ item.regexp }}"
   line: "{{ item.line }}"
  loop:
    - { destfile: "{{ dst_compose }}", regexp: "container_name:", line: "container_name: '{{ container_name }}'" }
    - {	destfile: "{{ dst_compose }}", regexp: "image:", line: "image: docker.elastic.co/elasticsearch/elasticsearch:{{ version }}" }
  when: "'elasticsearch_hosts' in group_names and update == false"

#--------------ES_CONFIG----------------------------

- name: Change elastic config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: admin
    group: admin
  with_items:
    - { src: 'templates/elasticsearch.yml.j2', dest: '{{ dst_config }}' }
  when: "'elasticsearch_hosts' in group_names and update == false"

#---------------INSTALL_CURATOR---------------------

- name: copy curator configs to hosts
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  loop:
    - { src: "{{ src_es_curator_sh }}", dest: "{{ dst_es_curator_sh }}", owner: 'admin', group: 'admin' }
    - { src: "{{ src_es_curator_conf }}", dest: "{{ dst_es_curator_conf }}", owner: 'admin', group: 'admin' }
  when: "'elasticsearch_hosts' in group_names and update == false and inventory_hostname == node_name1"

- name: add sh job to cron"
  ansible.builtin.cron:
    name: "delete old index"
    minute: "0"
    hour: "5"
    day: "3"
    job: "/home/dockeradm/SCRIPTS/curator/delete_old_indices.sh >> /LOGS/docker/curator/curator_delete.log"
  when: "'elasticsearch_hosts' in group_names and update == false and inventory_hostname == node_name1"

#---------------INSTALL_TELEGRAF---------------------

- name: Download telegraf
  get_url:
    url: "https://dl.influxdata.com/telegraf/releases/telegraf-{{ telegraf_version }}.x86_64.rpm"
    dest: /home/admin/SCRIPTS/
  when: "'elasticsearch_hosts' in group_names and update == false"

- name: Install telegraf
  yum:
     name: "/home/admin/SCRIPTS/telegraf-{{ telegraf_version }}.x86_64.rpm"
     state: present
  when: "'elasticsearch_hosts' in group_names and update == false"

- name: copy telegraf configs to hosts
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  loop:
    - { src: "{{ src_telegraf_conf }}", dest: "{{ dst_telegraf_conf }}", owner: 'admin', group: 'admin' }
    - { src: "{{ src_telegraf_d }}", dest: "{{ dst_telegraf_d }}", owner: 'admin', group: 'admin' }
  when: "'elasticsearch_hosts' in group_names and update == false"


